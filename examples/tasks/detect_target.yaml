name: detect_connection           # Name of the pool: this is how pools and actions refer to each other
data:
  input:                          # Input data types
    image: url                    
    outlines: json
  output:                         # Output data types
    result: bool
actions:                          # Actions: what to do to tasks next
                                  # If next action is an Aggregate-object, specify it with the key on_closed
                                  # If next action is a Forward-object, specify it with the key on_result
                                  # If next action is a pool, specify it either under on_submitted, on_accepted or on_rejected,
                                  # depending on what you need.
  data_source: separate_bboxes
  on_submitted: outline_targets
interface:
  prompt: Does the text describe some element in the diagram?
project:
  setup:
    public_name: Check if the text describe some element in the diagram?
    public_description: Look at diagrams from science textbooks and state if the text describes some element in the diagram.
  instructions: data/instructions.html    # Task instructions in an HTML file
pool:
  estimated_time_per_suite: 60
  setup:
    private_name: Detect connection
    reward_per_assignment: 0.2
    assignment_max_duration_seconds: 600
    auto_accept_solutions: true             # Automatically accept all submitted tasks
  defaults:
    default_overlap_for_new_tasks: 1        # Overlap for pool: how many performers need to do the task
    default_overlap_for_new_task_suites: 1  # Overlap for pool: how many performers need to do the task suite
  mixer:                                    # Settings for one task suite
    real_tasks_count: 5                     # How many real tasks in a task suite
    golden_tasks_count: 0                   # How many control tasks in a suite
    training_tasks_count: 0                 # How many training tasks in a suite
  speed_quality_balance:
    top_percentage_by_quality: 20
